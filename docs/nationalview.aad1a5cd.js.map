{"version":3,"sources":["nationalview.js"],"names":["countydata","statedata","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","personalincome","then","data2","forEach","d","push","personalincomebystate","data3","e","drawAnnualIncomeCounty","year","markGeoshape","stroke","strokeWidth","data","topojson","feature","transform","lookup","from","key","fields","encode","color","fieldQ","scale","domain","scheme","project","projection","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;AACA,IAAIA,UAAU,GAAG,EAAjB;AACA,IAAIC,SAAS,GAAG,EAAhB,EACA;;AACA,IAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAGZC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACdA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GALW;AAMZJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,QAAQ,EAAE;AADN;AANM,CAAhB,EAWA;AACA;AACA;AACA;;AACAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B;AAGAa,EAAE,CAACC,GAAH,CAAOC,kCAAP,EAAuBC,IAAvB,CAA4B,UAASC,KAAT,EAAgB;AAC1CA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAASC,CAAT,EAAW;AACvBrB,IAAAA,UAAU,CAACsB,IAAX,CAAgBD,CAAhB;AACD,GAFD;AAGAN,EAAAA,EAAE,CAACC,GAAH,CAAOO,iCAAP,EAA8BL,IAA9B,CAAmC,UAASM,KAAT,EAAe;AAChDA,IAAAA,KAAK,CAACJ,OAAN,CAAc,UAASK,CAAT,EAAW;AACvBxB,MAAAA,SAAS,CAACqB,IAAV,CAAeG,CAAf;AACD,KAFD;AAIAC,IAAAA,sBAAsB,CAAC,MAAD,CAAtB;AACD,GAND;AAOD,CAXD;;AAeA,SAASA,sBAAT,CAAgCC,IAAhC,EAAsC;AACpChB,EAAAA,EAAE,CAACiB,YAAH,CAAgB;AAACC,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,WAAW,EAAE;AAA9B,GAAhB,EACOC,IADP,CACYpB,EAAE,CAACqB,QAAH,CAAY,oEAAZ,EAAkFC,OAAlF,CAA0F,UAA1F,CADZ,EAEOC,SAFP,CAGQvB,EAAE,CAACwB,MAAH,CAAU,IAAV,EAAgBC,IAAhB,CAAqBzB,EAAE,CAACoB,IAAH,CAAQ/B,UAAR,EAAoBqC,GAApB,CAAwB,SAAxB,EAAmCC,MAAnC,CAA0C,CAAC,SAAD,EAAWX,IAAX,CAA1C,CAArB,CAHR,EAKOY,MALP,CAMQ5B,EAAE,CAAC6B,KAAH,GAAWC,MAAX,CAAkBd,IAAlB,EAAwBe,KAAxB,CAA8B;AAACC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAAT;AAAkBC,IAAAA,MAAM,EAAE;AAA1B,GAA9B,CANR,EAOQjC,EAAE,CAACL,OAAH,CAAW,CAAC,SAAD,EAAWqB,IAAX,CAAX,CAPR,EASOkB,OATP,CASelC,EAAE,CAACmC,UAAH,CAAc,WAAd,CATf,EAUOC,KAVP,CAUa,GAVb,EAUkBC,MAVlB,CAUyB,GAVzB,EAWO7C,MAXP,CAWc;AAACE,IAAAA,IAAI,EAAE;AAACwB,MAAAA,MAAM,EAAE;AAAT;AAAP,GAXd,EAYOoB,MAZP,GAaG/B,IAbH,CAaQ,UAAAgC,WAAW,EAAI;AACnBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,WAA9B,CAA0CH,WAA1C;AACH,GAfD;AAgBD","file":"nationalview.aad1a5cd.js","sourceRoot":"..\\src","sourcesContent":["import personalincome from '../static/income_per_hour_by_county.csv'\r\nimport personalincomebystate from '../static/income_per_hour_by_state.csv'\r\n\"use strict\"; \r\nvar countydata = [];\r\nvar statedata = [];\r\n//var yearrange = ['2016','2017','2018','2019'];\r\nconst options = {\r\n    config: {\r\n    },\r\n    init: (view) => {\r\n      view.tooltip(new vegaTooltip.Handler().call);\r\n    },\r\n    view: {\r\n      renderer: \"canvas\",\r\n    },\r\n};\r\n\r\n//const selectYear = vl.selectSingle('Select') // name the selection 'Select'\r\n//.fields('Year')          // limit selection to the Major_Genre field\r\n//.init('2016') // use first genre entry as initial value\r\n//.bind(vl.menu(yearrange));\r\nvl.register(vega, vegaLite, options);\r\n\r\n\r\nd3.csv(personalincome).then(function(data2) {\r\n  data2.forEach(function(d){\r\n    countydata.push(d);\r\n  })\r\n  d3.csv(personalincomebystate).then(function(data3){\r\n    data3.forEach(function(e){\r\n      statedata.push(e);\r\n    })\r\n\r\n    drawAnnualIncomeCounty('2019');\r\n  })\r\n});\r\n\r\n\r\n\r\nfunction drawAnnualIncomeCounty(year) {\r\n  vl.markGeoshape({stroke: '#aaa', strokeWidth: 0.25})\r\n        .data(vl.topojson(\"https://cdn.jsdelivr.net/npm/vega-datasets@1.31.1/data/us-10m.json\").feature('counties'))\r\n        .transform(\r\n          vl.lookup('id').from(vl.data(countydata).key('GeoFips').fields(['GeoName',year])),\r\n        )\r\n        .encode(\r\n          vl.color().fieldQ(year).scale({domain: [0, 100],scheme: 'lighttealblue'}),\r\n          vl.tooltip(['GeoName',year])\r\n        )\r\n        .project(vl.projection('albersUsa'))\r\n        .width(890).height(500)\r\n        .config({view: {stroke: null}})\r\n        .render()\r\n    .then(viewElement => {\r\n      document.getElementById('nv').appendChild(viewElement);\r\n  });\r\n}"]}